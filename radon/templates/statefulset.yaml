apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "radon.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "radon.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
{{- with .Values.statefulsetAnnotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}

spec:
  replicas: {{ .Values.replicas }}
  serviceName: {{ template "radon.fullname" . }}
  selector:
    matchLabels:
      app: {{ template "radon.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "radon.fullname" . }}
        release: {{ .Release.Name }}
{{- with .Values.podLabels }}
{{ toYaml . | indent 8 }}
{{- end }}
      annotations:
        checksum/imagePullSecrets: {{include (print $.Template.BasePath "/_imagePullSecretPrivate.tpl") . | sha256sum }}
{{- with .Values.podAnnotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.schedulerName }}
      schedulerName: "{{ .Values.schedulerName }}"
      {{- end }}
      {{- if .Values.imageCredentials.enable }}
      imagePullSecrets:
        - name: {{ template "radon.imagePullSecret" . }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      {{- end }}
      serviceAccountName: {{ template "radon.serviceAccountName" . }}
      initContainers:
      - name: "remove-lost-found"
        image: "{{ .Values.busybox.image}}:{{ .Values.busybox.tag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
        resources:
{{ toYaml .Values.initContainer.resources | indent 10 }}
        command:  ["rm", "-fr", "/data/lost+found"]
        volumeMounts:
        - name: data
          mountPath: /data
          {{- if .Values.persistence.subPath }}
          subPath: {{ .Values.persistence.subPath }}
          {{- end }}
      {{- if .Values.extraInitContainers }}
{{ tpl .Values.extraInitContainers . | indent 6 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      containers:
      - name: {{ template "radon.fullname" . }}
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy | quote }}

        {{- with .Values.args }}
        args:
        {{- range . }}
          - {{ . | quote }}
        {{- end }}
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: BACKEND_NAME_HOST_PORT_USER_PASSWORD_MAXCONNECTIONS
          value: {{ template "radon.backendaddress" . }}
        - name: RADON_DATABASE
          value: {{ .Values.database }}
        - name: BACKEND_REPLICA
          value: {{ default "0" .Values.backend_replicas | quote }}
        {{- if .Values.timezone }}
        - name: TZ
          value: {{ .Values.timezone }}
        {{- end }}
        {{- if .Values.extraEnvVars }}
{{ tpl .Values.extraEnvVars . | indent 8 }}
        {{- end }}
        ports:
        - name: radon
          containerPort: 3308
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "/radon/bin/radon_ctl status "
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "/radon/bin/radon_ctl ping"
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        volumeMounts:
        - name: data
          mountPath: /data
          {{- if .Values.persistence.subPath }}
          subPath: {{ .Values.persistence.subPath }}
          {{- end }}
      {{- if .Values.metrics.enabled }}
      - name: metrics
        image: "{{ .Values.metrics.image }}:{{ .Values.metrics.imageTag }}"
        #imagePullPolicy: {{ .Values.metrics.imagePullPolicy | quote }}
        #{{- if .Values.mysqlAllowEmptyPassword }}
        #command:
        #- 'sh'
        #- '-c'
        #- 'DATA_SOURCE_NAME="root@(localhost:3306)/" /bin/mysqld_exporter'
        #{{- else }}
        #env:
        #- name: MYSQL_ROOT_PASSWORD
        #  valueFrom:
        #    secretKeyRef:
        #      name: {{ template "radon.secretName" . }}
        #      key: mysql-root-password
        #command:
        #- 'sh'
        #- '-c'
        #- 'DATA_SOURCE_NAME="root:$MYSQL_ROOT_PASSWORD@(localhost:3306)/" /bin/mysqld_exporter'
        #{{- end }}
        {{- range $f := .Values.metrics.flags }}
        - {{ $f | quote }}
        {{- end }}
        ports:
        - name: metrics
          containerPort: 9104
        livenessProbe:
          httpGet:
            path: /
            port: metrics
          initialDelaySeconds: {{ .Values.metrics.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.metrics.livenessProbe.timeoutSeconds }}
        readinessProbe:
          httpGet:
            path: /
            port: metrics
          initialDelaySeconds: {{ .Values.metrics.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.metrics.readinessProbe.timeoutSeconds }}
        resources:
{{ toYaml .Values.metrics.resources | indent 10 }}
      {{- end }}
      {{- if not .Values.persistence.enabled }}
      volumes:
      - name: data
        emptyDir: {}
      {{- end -}}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
      namespace: {{ .Release.Namespace }}
    spec:
      accessModes:
      - {{ .Values.persistence.accessMode }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
        limits:
          storage: {{ .Values.persistence.size }}
  {{- end -}}
